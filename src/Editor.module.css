
.heading {
    margin-bottom: var(--heading-bottom-margin);
    user-select: none;
}

.layoutContainer {
    width:100%;
    height:100%;
    display: flex;
    flex-direction: column;
}

.editorContainer {
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: row;

    position: relative;
    box-shadow: var(--window-drop-shadow);
}

.overlayCommon {
    position: absolute;
    top: 0px;
    left: 0px;
    width:100%;
    height: 100%;
    max-height: 100%;

    display: flex;
    flex-direction: column;
    font-size: var(--code-window-font-size);
    font-weight: var(--code-window-font-weight);
    align-items: flex-start;

    resize: none;
    outline: none !important;
    padding: 0px;
    border-width: 0px;

    color: rgb(255,255,255);

    line-height: var(--code-window-line-height);
}

.textarea {
    background: rgba(0,0,0,0);
    /* Hide the text as its rendered by syntax highlighter layer.

    Must use text-fill-color because otherwise selection won't be
    visible.
    */
    -webkit-text-fill-color: transparent;
    color: transparent;
    caret-color: var(--code-window-text-color); /* but show cursor! */

    overflow: auto;
    z-index: 10;
}
.textarea::selection {
    background: #aaa;
}

.textareaHighlightOverlay {
    background: var(--code-window-background);
    pointer-events: none;
    overflow: hidden;
}

.textareaHighlightRow {
    width: 100%;
    height: var(--code-window-line-height);
    min-height: var(--code-window-line-height);
    line-height: var(--code-window-line-height);
    display: flex;
    flex-direction: row;
    align-items: flex-start;
}

.textareaHighlightRowCurrent {
    width: 100%;
    background-color: var(--highlight-current-line-color);
}

.textareaHighlightRow pre {
    height: var(--code-window-line-height);
    min-height: var(--code-window-line-height);
    line-height: var(--code-window-line-height);
}

.highlightError {
    background: var(--highlight-error-background-color);
}

.gutter {
    display: flex;
    flex-direction: column;
    align-items: flex-end;

    transform: translateX(calc(-1*var(--gutter-width) - 3px));

    width: calc(var(--gutter-width));
    min-width: calc(var(--gutter-width));

    line-height: var(--code-window-line-height);
    height: 100%;
    max-height: 100%;
    overflow: hidden;
    font-size: 12px;
}

.gutterRow {
    color: var(--gutter-text-color);
    height: var(--code-window-line-height);
    min-height: var(--code-window-line-height);
    line-height: var(--code-window-line-height);
}

.gutterRowSelected {
    color: var(--gutter-text-highlight-color);
}



/*-----------------------------------------------------------------------
 * syntax hilighting
 *-----------------------------------------------------------------------*/

.textareaSyntaxHighlightOverlay {
    z-index: 11;
    overflow: hidden;
    pointer-events: none;
    background: transparent;
}

.textareaSyntaxHighlightRow {
    width: 100%;
    height: var(--code-window-line-height);
    min-height: var(--code-window-line-height);
    line-height: var(--code-window-line-height);
    display: flex;
    flex-direction: row;
    align-items: flex-start;
}

.textareaSyntaxHighlightRow pre {
    height: var(--code-window-line-height);
    min-height: var(--code-window-line-height);
    line-height: var(--code-window-line-height);
}

.hiliteNormal {
    color: var(--code-window-text-color);
}

.hiliteComment {
   color: var(--code-window-comment-color);
}
